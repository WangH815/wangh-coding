1、internet设备物理地址和ip地址转换采用什么协议？
ARP（Address Resolution Protocol）:地址转换协议

2、SQL语言哪个词是用来实现结果去重的？
distinct

3、与查询条件AGE BETWEEN 20 AND 30等同的是？
X>=20 AND X<=30

4、有一个备份程序mybackup，需要在周一至周五下午1点和晚上8点
各运行一次，正确的crontab配置项是？
0 13,20 * * 1-5 sh /path/mybackup

5、堆栈常用于？
存放CPU寄存器的内容

6、Linux文件权限分4段，例如drw-r--r--，那么第二段（rw-）表示的内容是？
属主对文件夹可读可写

7、cdn下载监控显示request time突增，可能是源站返回了哪个状态码？
412  --不确定

8、将存储设备按访问速度从低到高排序：内存、磁盘、SSD、寄存器
磁盘 < SSD < 内存 < 寄存器

9、您平常遇到一个比较难的问题，一般是怎么处理的，请简述一次您调试、分析、处理问题的一个过程，
要求写清楚问题是什么，排查的思路过程，遇到的障碍是怎么排除的，事后的改进措施，
例如：https://yq.aliyun.com/articles/510199?spm=a2c4e.11163080.searchblog.129.51f92ec1wneL0i。
如您有现成博客，或者总结，可以直接贴上：



10、假设您是aws的tam，您的客户遇到了链接的故障，请按照文档中的细节，给客户一个故障简报，
表达歉意，并能简明扼要的说清楚故障原因，故障经过，故障改进措施。https://coolshell.cn/articles/17737.html：
尊敬的XX公司：

    由于我们失误导致了贵公司的连接故障，对此我们深感抱歉。以下是我们的一个故障简报:
	
1.故障原因及经过   
    由于我们工程师在移除了财务系统的子系统的少量服务器时，使用了错误的命令导致
S3控制系统的对象索引服务（Index）和位置服务系统（Placement）被移除,从而导致连接故障。在我工程师的努力下终于恢复服务。

2.故障改进措施
a)改进运维操作工具。主要有以下措施：
  让删除服务这个操作变慢一些;
  加上一个最小资源数限制的SafeGuard
2）改进恢复过程。针对恢复时间过长有以下改进：
  分解现有厚重的重要服务成更小的单元，将这几个重要服务重构为更小的服务;
  年内完成对 Index 索引服务的分区计划





11、说一个您通宵处理问题的事迹。是如何抗住压力与疲倦：
通宵变更


12、请写一件您心目中最值得骄傲的一件工作成果:


13、您有写博客的习惯吗？如有，写下博客地址，如无，请写下您日常如何积累知识库：
无;github笔记(比较乱)


14、阿里有个产品叫闪电立方，其实就是客户寄硬盘到数据中心，加假如客户快递n块装满数据的1TB硬盘，
高铁是以240km/h速度行驶1000km从北京将数据运送到杭州。客户至少一次邮寄（ ）块硬盘才能使传输速率超过5000Gbit/s。
9376
5000*(1000/240*60*60)/(1*1000*8)=9375  --过程

15、ESTABLISHED状态的客户端收到服务端发送的FIN包，说明什么：
Keepalive Message


16、与10.110.12.29 mask 255.255.255.224属于同一网段的主机IP地址是：
224=(11100000)2  网络地址为10.110.12.32  可容纳主机为30个(除去网络地址和广播地址) 主机范围 10.110.12.[0-31]

17、服务器上通过df查询，发现数据盘使用中的空间为负数，可能原因是：
root或者其他用户的保留分区

18、请讲base64码JUU2JTg4JTkwJUU5JTgzJUJE反解出来：
a)Base64使用A--Z，a--z，0--9，+，/ 这64个字符，依次对应0-63
b)编码原理：将3个字节转换成4个字节（ （3 X 8） = 24 = （4 X 6） ）
            先读入3个字节，每读一个字节，左移8位，再右移四次，每次6位，这样就有4个字节了。
c)解码原理：将4个字节转换成3个字节。先读入4个6位（用或运算），每次左移6位，再右移3次，
            每次8位。这样就还原了。

19、使用阿里云高防的客户，在微信的h5应用被运营商插入了广告，
下列运营商使用的劫持技术中，不可能的是？
使用https DNS劫持

20、下列ping结果,哪个是现实网络中不可能会出现的结果:
PING (Packet Internet Groper)，因特网包探索器，用于测试网络连接量的程序。
Request Timed Out
Destination Net Unreachable
Bad IP address
Source quench received


21、下面哪个参数是tcpdump结果中将目标ip和端口以数字的形式显示？
tcpdump -nn 抓包工具


22、SQL语言中如果需要删除表中所有数据（括自增ID)并保留表需要的命令
TRUNCATE table_name;                           mysql
TRUNCATE TABLE table_name RESTART IDENTITY;    postgresql

23、Linux 系统下的traceroute 和 Windows 下的9 tracert 命令默认
分别使用什么协议进行探测？
tracert，由大神Van Jacobson设计并实现（膜拜），可以用来探测出报文在网络中从源到目的所经过的所有三层路由节点。
ICMP（Internet Control Message Protocol）Internet控制报文协议
UDP

24、如何快速发现系统虚拟内存问题？
free/vmstat   //待补充
pmap pid      //查看指定进程虚拟内存分布
ps aux        //查看当前所有进程资源使用(包括虚拟内存)（VSZ   RSS）
top           //动态查看所有进程资源使用


25、当用户想去 umount一块挂载到/alidata目录上的数据盘/dev/xvdb1时，
出现＂device is busy”错误提示用于排查是何进程存在IO调用？


26、io复用模型select,epoll的表述正确的有
https://blog.csdn.net/doujinlong1/article/details/84072555  //参考文档


27、Linux 系统中希星从后向前查看一个较大文件时，一般使用哪个命令？
tac file | less


28、以下哪些是CSRF漏洞的防御方案？
 CSRF是跨站请求伪造，不攻击网站服务器，而是冒充用户在站内的正常操作。
 通常由于服务端没有对请求头做严格过滤引起的。CSRF会造成密码重置，
 用户伪造等问题，可能引发严重后果
 核心在于用户校验
 
 （1）来源校验
使用http请求头中的referer来源，对客户端源身份校验，此方法早期使用较多，但是仍然容易被绕过，所以这里并不建议使用。
（2）用户token校验
添加基于当前用户身份的有效tokens随机验证机制，即在向后端提交数据操作请求时，添加基于当前用户的随机token校验值，
此种校验方法当前使用比较多；（xss和csrf漏洞同时存在时token校验生效）
（3）当前用户密码验证
在修改关键信息时，要当前用户输入其自身的密码，以验证当前用户身份的真伪，防止未授权的恶意操作；
（4）添加验证机制
在请求数据提交前，需填写验证码信息提交，以增加对用户来源的有效验证，防止恶意未授权的操作产生。
 



29、如果要用UPD实现类似TCP的可靠传输，一般需要手工实现以下特性：
设计方法
1.添加seq/ack机制，确保数据发送到对端
2.添加发送和接收缓冲区，主要是用户超时重传
3.添加超时重传机制
详细说明：发送端发送数据时，生成一个随机seq=x，然后每一片按照数据大小分配seq。
数据到达接收端后接收端放入缓存，并发送一个ack=x的包，表示对方已经收到了数据。
发送端收到了ack包后，删除缓冲区对应的数据。时间到后，定时任务检查是否需要重传数据。


30、Mysql explain命令分析出的结过中，type字段表达的含义正确的是？
id:选择标识符
select_type:表示查询的类型。
table:输出结果集的表
partitions:匹配的分区
type:表示表的连接类型:ALL、index、range、 ref、eq_ref、const、system、NULL（从左到右，性能从差到好）
possible_keys:表示查询时，可能使用的索引
key:表示实际使用的索引
key_len:索引字段的长度
ref:列与索引的比较
rows:扫描出的行数(估算的行数)
filtered:按表条件过滤的行百分比
Extra:执行情况的描述和说明

31、下列哪些是关系型数据库？
mysql/oracle/db2/sql server/


32、一台Web服务器，在促销活动中发现服务器日志中出现如下报警信息：
TCP:time wait bucket table overflow可能的原因？


33、下列哪些方式对解决xss漏洞有帮助？
XSS跨站漏洞的产生的根源是对前端输入的值以及输出的值进行全面的安全过滤，
对一些非法的参数，像<>、,",'等进行自动转义，或者是强制的拦截并提示，
过滤双引号，分好，单引号，对字符进行HTML实体编码操作，如果您对网站代码不是太懂，
可以找专业的网站安全公司来修复XSS跨站漏洞，国内也就SINESAFE,深信服，绿盟，启明
星辰比较专业，关于漏洞的修复办法，遵循的就是get,post,提交参数的严格过滤，对一些
含有攻击特征的代码进行拦截。


34、关于对称加密以下说法正确的是？
对称加密的密钥也可以用作解密密钥;常见的对称加密算法有DES、3DES、Blowfish、IDEA、RC4、RC5、RC6和AES 
加密密钥和解密密钥必须是相同的

非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）;
 常见的非对称加密算法有：RSA、ECC（移动设备用）、Diffie-Hellman、El Gamal、DSA（数字签名用）


35、小明发现服务器往外异常发包，那么他可以用排查的命令有？
sar -n DEV 2 10

开始之前，先要清除 eth0所有队列规则
tc qdisc del dev eth0 root 2> /dev/null > /dev/null
定义最顶层(根)队列规则，并指定 default 类别编号
tc qdisc add dev eth0 root handle 1: htb default 20
tc class add dev eth0 parent 1: classid 1:20 htb rate 2000kbit

查看TC的状态
tc -s -d qdisc show dev eth0
tc -s -d class show dev eth0


36、ECS实例经常受到外部扫描探测。为了提升安全性，维护人员需要配置
只允许特定ip才能访问实例的sshd服务，正确的途径是：
1.iptables限制连入ip   防火墙限制
2.sshd配置中限制
echo '
allowusers root@222.38.10.15
' >> /etc/ssh/sshd_config

37、ESTABLISHED状态的客户端收到服务端发送的FIN包，说明什么：
CLOSED	     没有使用这个套接字[netstat 无法显示closed状态]
LISTEN	     套接字正在监听连接[调用listen后]
SYN_SENT	 套接字正在试图主动建立连接[发送SYN后还没有收到ACK]
SYN_RECEIVED 正在处于连接的初始同步状态[收到对方的SYN，但还没收到自己发过去的SYN的ACK]
ESTABLISHED	 连接已建立
CLOSE_WAIT	 远程套接字已经关闭：正在等待关闭这个套接字[被动关闭的一方收到FIN]
FIN_WAIT_1	 套接字已关闭，正在关闭连接[发送FIN，没有收到ACK也没有收到FIN]
CLOSING	     套接字已关闭，远程套接字正在关闭，暂时挂起关闭确认[在FIN_WAIT_1状态下收到被动方的FIN]
LAST_ACK	 远程套接字已关闭，正在等待本地套接字的关闭确认[被动方在CLOSE_WAIT状态下发送FIN]
FIN_WAIT_2	 套接字已关闭，正在等待远程套接字关闭[在FIN_WAIT_1状态下收到发过去FIN对应的ACK]
TIME_WAIT	 这个套接字已经关闭，正在等待远程套接字的关闭传送[FIN、ACK、FIN、ACK都完毕，这是主动方的最后一个状态，在过了2MSL时间后变为CLOSED状态]



38、Linux进程间通信可以有的方式：
管道( pipe )：
  管道包括三种:
    普通管道PIPE： 通常有两种限制,一是单工,只能单向传输;二是只能在父子或者兄弟进程间使用.
    流管道s_pipe: 去除了第一种限制,为半双工，只能在父子或兄弟进程间使用，可以双向传输.
    命名管道:name_pipe：去除了第二种限制,可以在许多并不相关的进程之间进行通讯.
信号量( semophore ) ：
  信号量是一个计数器，可以用来控制多个进程对共享资源的访问。
  它常作为一种锁机制，防止某进程正在访问共享资源时，其他进程也访问该资源。
  因此，主要作为进程间以及同一进程内不同线程之间的同步手段。
消息队列( message queue ) ：
  消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。
  消息队列克服了信号传递信息少、管道只能承载无格式字节流以及缓冲区大小受限等缺点。
信号 ( sinal ) ：
  信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生。
共享内存( shared memory ) ：
  共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，
  但多个进程都可以访问。共享内存是最快的 IPC 方式，它是针对其他进程间通信方式
  运行效率低而专门设计的。它往往与其他通信机制，如信号两，配合使用，来实现进程间的同步和通信。
套接字( socket ) ：
  套解口也是一种进程间通信机制，与其他通信机制不同的是，它可用于不同机器间的进程通信。

39、阿里自主研发的数据库产品是：
OceanBase


40、数据库有3个列-a,b,c,能让select * from table where c=1 and b=2命中索引的索引方案是：
(c,b)/(b,c)/(c)/(b)  用到即可用索引,跟顺序无关


41、下面常见服务与端口对应不正确的是：
HTTP 80/8080/3128/8081/9098
SOCKS1080
FTP   21
Telnet 23
HTTP 80
HTTPS 443/tcp 443/udp
SSH/SCP 22/tcp
SMTP 25/tcp 
POP3 110/tcp
Webshpere应用 9080
webshpere管理 9090
TOMCAT 8080
WIN2003远程登录，默认端口号为3389
Symantec AV/Filter for MSE,默认端口号为 8081
Oracle     1521
ORACLE EMCTL 1158
Oracle XDB（XML 数据库），默认的端口号为8080
Oracle XDB FTP服务，默认的端口号为2100
MS SQL*SERVER数据库server，默认的端口号为1433/tcp 1433/udp
MS SQL*SERVER数据库monitor，默认的端口号为1434/tcp 1434/udp

42、下列哪些是存储引擎
mysql:Innodb/MyIASM/MEMORY


43、平常从哪些网站获取技术咨询，请尽量贴全点：
1.各大官网
2.https://www.bookstack.cn/
3.https://github.com/
4.https://www.centos.org/
5.https://www.runoob.com/


44、你是一个小型web系统的运维负责人，你们的网站经常受到cc和ddos攻击，
请您分别阐述下，您有什么思路防御这两种攻击？
DDoS攻击:分布式拒绝服务攻击（主要针对服务器）
较短的时间内发起大量请求，大规模消耗目标网站的主机资源，让它无法正常服务

1.做好网站程序和服务器自身维护
 服务器系统漏洞防御
 服务器权限设置，尽量把数据库和程序单独拿出根目录，更新使用的时候再放进去，尽可能把网站做成静态页面。
2.负载均衡
3.分布式集群防御:多节点多IP
4.接入高防服务
  日常网络安全防护对一些小流量DDOS攻击能够起到一定的防御效果，但如果遇到大流量洪水DDOS攻击，
最直接的办法就是接入专业的DDOS高防服务，建议接入墨者盾，通过墨者盾高防隐藏源IP，对攻击流量进行清洗，
保障企业服务器的正常运行。
5.异常流量的清洗过滤


CC攻击:分布式拒绝服务(主要针对页面,大量正常流量)
相比其它的DDOS攻击CC似乎更有技术含量一些。这种攻击你见不到真实源IP，
见不到特别大的异常流量，但是破坏性非常大，直接导致系统服务挂了无法正常服务。

DDoS攻击与CC攻击难以防御，对企业业务的损害也非常大。所以，大家尽可能做好所有防御工作，
才能让你们的业务不被DDoS攻击与CC攻击的影响哦。

1.利用Session做访问计数器：利用Session针对每个IP做页面访问计数器或文件下载计数器，
  防止用户对某个页面频繁刷新导致数据库频繁读取或频繁下载某个文件而产生大额流量。（
  文件下载不要直接使用下载地址，才能在服务端代码中做CC攻击的过滤处理）
2.把网站做成静态页面：大量事实证明，把网站尽可能做成静态页面，不仅能大大提高抗攻击能力，
  而且还给骇客入侵带来不少麻烦，至少到现在为止关于HTML的溢出还没出现，看看吧！新浪、搜狐、
  网易等门户网站主要都是静态页面，若你非需要动态脚本调用，那就把它弄到另外一台单独主机去，
  免的遭受攻击时连累主服务器。
3.增强操作系统的TCP/IP栈:主要是抵御SYN攻击包
4. 在存在多站的服务器上，严格限制每一个站允许的IP连接数和CPU使用时间，这是一个很有效的方法。
  CC的防御要从代码做起，其实一个好的页面代码都应该注意这些东西，还有SQL注入，不光是一个入侵工具，
  更是一个DDOS缺口，大家都应该在代码中注意。举个例子吧，某服务器，开动了5000线的CC攻击，没有一点反应，
  因为它所有的访问数据库请求都必须一个随机参数在Session里面，全是静态页面，没有效果。突然发现它有一个
  请求会和外面的服务器联系获得，需要较长的时间，而且没有什么认证，开800线攻击，服务器马上满负荷了。
  代码层的防御需要从点点滴滴做起，一个脚本代码的错误，可能带来的是整个站的影响，甚至是整个服务器的影响!
5.服务器前端加CDN中转(免费的有百度云加速、360网站卫士、加速乐、安全宝等)，如果资金充裕的话，可以购买高防的盾机，
  用于隐藏服务器真实IP，域名解析使用CDN的IP，所有解析的子域名都使用CDN的IP地址。此外，服务器上部署的其他域名也
  不能使用真实IP解析，全部都使用CDN来解析。 
  另外，防止服务器对外传送信息泄漏IP地址，最常见的情况是，服务器不要使用发送邮件功能，因为邮件头会泄漏服务器的
  IP地址。如果非要发送邮件，可以通过第三方代理(例如sendcloud)发送，这样对外显示的IP是代理的IP地址。 
  总之，只要服务器的真实IP不泄露，10G以下小流量DDOS的预防花不了多少钱，免费的CDN就可以应付得了。
  如果攻击流量超过20G，那么免费的CDN可能就顶不住了，需要购买一个高防的盾机来应付了，而服务器的真实IP同样需要隐藏




