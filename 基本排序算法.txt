基本排序算法


https://blog.csdn.net/hguisu/article/details/7776068   //参考文档


算法分类
         
内部排序(使用内存)           //速度较快
插入排序:直接插入排序;希尔排序
选择排序:简单选择排序;堆排序
交换排序:冒泡排序;快速排序
归并排序
基数排序

外部排序(需要使用内外存)     //一般数据量较大

当n较大，则应采用时间复杂度为O(nlog2n)的排序方法:
快速排序(数据随机分布时,排序平均时间最短)、堆排序或归并排序序



1.插入排序—直接插入排序(Straight Insertion Sort)
基本思想:
将一个记录插入到已排序好的有序表中，从而得到一个新，记录数增1的有序表。
即：先将序列的第1个记录看成是一个有序的子序列，然后从第2个记录逐个进行
插入，直至整个序列有序为止。

要点：设立哨兵，作为临时存储和判断数组边界之用



2.插入排序—希尔排序（Shell Sort）
希尔排序是1959 年由D.L.Shell 提出来的，相对直接排序有较大的改进。
希尔排序又叫缩小增量排序

基本思想：

先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个
序列中的记录“基本有序”时，再对全体记录进行依次直接插入排序。

步骤:
选择一个增量序列t1，t2，…，tk，其中ti>tj，tk=1;
按增量序列个数k，对序列进行k 趟排序;
每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别
对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，
表长度即为整个序列的长度。


3.选择排序—简单选择排序（Simple Selection Sort）
基本思想：

在要排序的一组数中，选出最小（或者最大）的一个数与第1个位置的数交换；
然后在剩下的数当中再找最小（或者最大）的与第2个位置的数交换，依次类推，
直到第n-1个元素（倒数第二个数）和第n个元素（最后一个数）比较为止。


4.选择排序—堆排序（Heap Sort）
堆排序是一种树形选择排序，是对直接选择排序的有效改进。


5.交换排序—冒泡排序（Bubble Sort）
基本思想：

在要排序的一组数中，对当前还未排好序的范围内的全部数，自上而下对相邻的
两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。即：每当两相邻
的数比较后发现它们的排序与排序要求相反时，就将它们互换。


6. 交换排序—快速排序（Quick Sort）
基本思想：

1）选择一个基准元素,通常选择第一个元素或者最后一个元素,
2）通过一趟排序讲待排序的记录分割成独立的两部分，其中一部分记录的元素值均比
   基准元素值小。另一部分记录的 元素值比基准值大。
3）此时基准元素在其排好序后的正确位置
4）然后分别对这两部分记录用同样的方法继续进行排序，直到整个序列有序。


7.归并排序（Merge Sort）
基本思想：

归并（Merge）排序法是将两个（或两个以上）有序表合并成一个新的有序表，即把待
排序序列分为若干个子序列，每个子序列是有序的。然后再把有序子序列合并为整体有序序列。


8.桶排序/基数排序(Radix Sort)
说基数排序之前，我们先说桶排序：

基本思想：是将阵列分到有限数量的桶子里。每个桶子再个别排序（有可能再使用别的排序
算法或是以递回方式继续使用桶排序进行排序）。桶排序是鸽巢排序的一种归纳结果。当要
被排序的阵列内的数值是均匀分配的时候，桶排序使用线性时间（Θ（n））。但桶排序并不是
 比较排序，他不受到 O(n log n) 下限的影响。
