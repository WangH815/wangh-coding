
#shell脚本的运行方式
1 . xx.sh      //一般用于生效用户配置而不需要重新登录shell，xx.sh有读权限即可
2 source xx.sh //同上。常见用于执行 profile 配置，脚本本身在当前进程中执行
3 sh xx.sh     //读权限即可，脚本本身会在子进程中执行
4 ./xx.sh      //需执行权限，脚本本身会在子进程中执行;如不指定当前路径，会优先根据PATH查找相应命令

#shell命令类型
1.内置命令
  shell解释器包含的命令，只有内置命令能改变shell命令行环境变量。
  在当前进程(一般是bash，跟随shell版本)中执行
  内置命令可使用 compgen -b | column 显示     //column格式化显示
  man command 会显示无相关使用手册，一般可通过 help command 或 command --help 获取帮助
  which command  无法显示命令位置
  常见内置命令 cd/help/pwd/export/set/alias/umask/kill/source/test等
2.shell函数
  shell编写的函数，可引用
3.外部命令
  独立的shell可执行命令，在子进程中执行(Linux内核调用fork()函数实现)，不会改变父进程的环境变量


#常用命令
sudo passwd root                  //ubuntu启用root用户
passwd -u 用户名                  //修改指定用户密码
man command                       //命令详细说明
command -h/--help                 //命令简要帮助
service systemd-networkd restart  //重启网络服务
tzselect                          //修改时区
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  //创建时区软连接(root操作)
su username        //切换用户，不加载用户环境变量，只切换用户权限;username缺省默认为root，下同
su - username      //切换用户，加载用户环境变量，等同于用户登录
sudo command       //以root用户执行某命令
apt-get autoremove //清理未使用的软件包
apt-get clean      //清理软件包
netplan apply      //生效netplan修改
cat                //逐行显示文件内容
tac                //逐行反向显示文件内容
nl                 //带行号的 cat
more               //分页查看文件，一次性加载，空格/b 翻页
less               //分页查看文件，逐步加载，空格/b PgUp/PgDn 翻页
head/tail -n       //显示文件头尾n行内容
tail -f filname    //循环读取某文件
ps/watch/top       //查看程序运行命令
free/vmstat/iostat/netstat  //内存/虚拟内存/系统IO/网络 监控
lsof               //查看文件(普通文件/目录/网络文件等)打开情况
at/crontab         //设置计划任务
tar/gzip           //打包压缩解压命令
chmod/chgrp/chown  //设置文件权限
df/du              //磁盘文件空间大小
which              //查看可执行文件的位置
whereis            //查看文件的位置 
locate             //配合数据库查看文件位置
find               //实际搜寻硬盘查询文件名称
ifconfig           //网络配置信息
ping               //测试主机连通性
traceroute         //到达指定主机网络路径
ss                 //socket统计信息
ln                 //创建软(-s)/硬链接
cut -b/c/d filename  //按字节/字符/自定义分隔符切割文本
sort               //文本排序
sed -a/d/c/i       //文本增删改查
split              //按照指定行数或字节数切割大文件
wc -c/m/l          //按照字节/字符/行数统计文本
write user [ttyname]  //向其他用户发送给信息(message)，ttyname可以使用who查询，Ctrl + c结束
file                                 //辨识文件类型
time [options] COMMAND [arguments]   //测量命令运行时间
xargs [options] [command [options]]  //捕获命令输出作为其他命令标准输入
command [options] | xargs [options]  //主要适用于不支持管道(|)的命令
bc                                   //计算器模式，quit退出
lscpu                                //显示cpu相关信息
tar -zxvf xxx.tar.gz   //解包
tar -jxvf xxx.tar.bz2  //同上


#vi/vim 常见操作
#三种模式
1.命令模式（Command mode）       //用于光标移动、复制粘贴、搜索替换等
2.输入模式（Insert mode）        //用于基本输入
3.底线模式（Last line mode）     //用于搜索替换

#其他命令
u           //撤销上一个命令  
<Ctrl> + r  //重复上一个命令
.           //小数点，功能同上

##命令模式
vi/vim [filename] 进入命令模式
光标指定单个字符

###光标移动和翻页
←/h 、↓/j 、↑/k 、→/l  //上下左右移动光标。n→表示光标向右移动n个字符，不跨行；其余同理
PgUp/PgDn              //上下翻页
n<space>  //<space>表示空格。向后移动n个字符，可能会跨行
0/Home    //移动光标到行首。Home为键盘功能键Home
$/End     //移动光标到行尾。End为键盘功能键
G         //移动光标到最后一行行首
nG        //移动光标到第n行行首
n<Enter>  //光标向下移动n行
gg        //移动光标到第一行行首，等价于1G

###删除
x/X       //向后删除单个字符/向前删除单个字符
nx/nX     //向后删除n个字符/向前删除n个字符
dd        //删除光标所在行
ndd       //删除光标开始行(包含)以下n行
D         //删除光标所在行内容，保留空行
d0        //删除光标位置到行首数据
d$        //删除光标位置到行尾数据
d1G       //删除当前行到第一行
dnG       //删除当前行(包含)到第n行
dG        //删除光标行到最后一行

###复制和粘贴
yy        //复制光标所在行
nyy       //复制光标行(包含)以下n行
y1G       //复制第一行到光标行
yG        //复制光标行到最后一行
y0        //复制行首到光标所在位置数据
y$        //复制光标位置到行尾数据
p/P       //粘贴到光标所在行下一行/上一行
J         //合并光标行与下一行，空格隔开    

##输入模式
以下为命令模式切换到输入模式
i/I      //光标处输入/光标所在行第一个非空格(一般就是行首)处输入
a/A      //光标处下一个字符处输入/光标所在行行尾处输入
o/O      //光标下一行/
r/R      //替换光标处字符一次/一直替换光标处字符，直到按下Esc

Insert   //功能键Insert用于输入模式中切换追加还是替换模式
ESC      //功能键ESC用于退出输入模式到命令模式

##底线模式
/str       //向下搜索字符str，?str表示向上搜索(不常用)
n/N        //执行上一个搜索命令/执行上一个方向相反的搜索命令
:set nu    //设置行号
:set nonu  //取消行号
:wq        //保存并退出。w,q可单独使用，!表示强制
:x         //同上
ZZ         //同上
:w filename      //另存为filename
:r filename      //将filename内容追加到光标所在行下一行
:n,m w filename  //将第n，m行之间的内容另存为到filename中
:!command        //暂时离开vi执行command


