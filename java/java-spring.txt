什么是Spring

Spring是一个集成了很多优秀设计模式的企业级应用程序开发解决方案，
第一版的Spring在03年发布，经过十多年的发展，Spring已经成为一个
庞大的体系，其使得 J2EE 开发变得越来越容易。


Spring的特点
1)轻量级
我们在提到Spring的时候经常会加的一个形容词就是轻量级，一个轻量级
的解决方案，Spring的轻量级一方面体现在大小上，基础版本的Spring只
有几MB的大小。另一方面，轻量级是指在使用Spring进行开发的时候，
系统为Spring需要支出的资源较少。Spring 可以使开发人员使用 POJO 
开发企业级的应用程序。而使用 POJO 的好处在于不需要一个庞大的 EJB 
容器产品（应用程序服务器），有一个轻量级的 servlet 容器就够了。
POJO（Plain Ordinary Java Objects），实际上就是普通的java类

2)控制反转
如果说什么是Spring最大的特点，那么毫无疑问是IOC和AOP。

IOC（Inversion of Control）控制反转，它是一种设计思想，简单说就是
创建Java对象的过程从之前new出来，变成了由Spring工厂创建出来
（由Spring来负责控制对象的生命周期和对象之间的关系），控制反转，
转移的就是创建对象的主动权。

有了IOC容器之后，我们把创建和查找依赖对象的控制权交给了容器，有容器
决定需要获取什么样的资源，而不是我们在应用程序中实现的创建和安排好。
通俗的来说就是所有的类在容器中进行注册，告诉容器自身的信息（什么类，
什么作用等）以及需要什么；随着系统的运行，Spring会主动的给你提供你
需要的对象，并且把你提供给需要的部分。

这样的设计很好的体现了面向对象的设计法则之一——好莱坞法则（别找我们，
我们找你），即由IoC容器帮对象找相应的依赖对象并注入，而不是由对象主动去找。

和IOC紧密结合在一起的是DI（Dependency Injection）依赖注入。依赖注入
可以说是控制反转的一个具体实现例子，其在Spring中的体现在于组件之间的
依赖关系由容器控制，我们通过简单的配置，不通过代码就可以得到指定的资源。

3)切面编程
说过了IOC，接下来就是Spring的另一个特点AOP（aspect oriented program），
面向切面编程。利用一种称为“横切”的技术，剖解开封装的对象内部，并将那些
影响了多个类的公共行为封装到一个可重用模块，并将其名为“Aspect”，即方面。
所谓“方面”，简单地说，就是将那些与业务无关，却为业务模块所共同调用的逻辑
或责任封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来
的可操作性和可维护性。AOP代表的是一个横向的关系，程序是顺序执行的，可以
简单理解为线性执行，自上而下，就象一条线，所谓切面编程就是，在这条线的
某一点（切点）处切开，放入另一个程序（增强处理），这个过程就是我们常说
的织入，而被切入处可以用几何常识形象的称之为切面。


Spring的常规组件
Spring作为一个企业级应用程序的解决方案，器体系无疑是庞大的，但是有利于
我们使用的是Spring是模块化实现的，允许用户根据实际需要选择所需模块，而不必
使用所有的模块。因此在使用Spring之前我们需要对Spring的组成有一个简单的了解。

1)核心容器
核心容器由核心，Bean，上下文和表达式语言模块组成
a.核心模块提供了框架的基本组成部分，包括 IoC 和依赖注入功能。
b.Bean 模块提供 BeanFactory，它是一个工厂模式的复杂实现。
c.上下文模块建立在由核心和 Bean 模块提供的坚实基础上，它是访问定义和配置的
   任何对象的媒介。ApplicationContext 接口是上下文模块的重点。
d.表达式语言模块在运行时提供了查询和操作一个对象图的强大的表达式语言。

2)数据访问
数据访问/集成层包括 JDBC，ORM，OXM，JMS 和事务处理模块，它们的细节如下：
a.JDBC 模块提供了删除冗余的 JDBC 相关编码的 JDBC 抽象层。
b.ORM 模块为流行的对象关系映射 API，包括 JPA，JDO，Hibernate 和 iBatis，提供了集成层。
c.OXM 模块提供了抽象层，它支持对 JAXB，Castor，XMLBeans，JiBX 和 XStream 的对象/XML 映射实现。
d.Java 消息服务 JMS 模块包含生产和消费的信息的功能。
e.事务模块为实现特殊接口的类及所有的 POJO 支持编程式和声明式事务管理。

3)Web
Web 层由 Web，Web-MVC，Web-Socket 和 Web-Portlet 组成，它们的细节如下：
a.Web 模块提供了基本的面向 web 的集成功能，例如多个文件上传的功能和使用 servlet 监听器和面向 web 应用程序的上下文来初始化 IoC 容器。
b.Web-MVC 模块包含 Spring 的模型-视图-控制器（MVC），实现了 web 应用程序。
c.Web-Socket 模块为 WebSocket-based 提供了支持，而且在 web 应用程序中提供了客户端和服务器端之间通信的两种方式。
d.Web-Portlet 模块提供了在 portlet 环境中实现 MVC，并且反映了 Web-Servlet 模块的功能。

4)其他
还有其他一些重要的模块，像 AOP，Aspects，Instrumentation和测试模块，它们的细节如下：
a.AOP 模块提供了面向方面的编程实现，允许你定义方法拦截器和切入点对代码进行干净地解耦，它实现了应该分离的功能。
b.Aspects 模块提供了与 AspectJ 的集成，这是一个功能强大且成熟的面向切面编程（AOP）框架。
c.Instrumentation 模块在一定的应用服务器中提供了类 instrumentation 的支持和类加载器的实现。
d.测试模块支持对具有 JUnit 或 TestNG 框架的 Spring 组件的测试。















