Data structure    //数据结构(Java版)



数据结构  优点                                缺点

数组      插入(新增数据)快;下标已知存取快     查找和删除慢;大小固定
有序数组  比无序数组查找快                    插入和删除慢;大小固定
栈        先进后出,后进先出                   存取其他相比较慢
队列      先进先出,后进后出                   存取其他相比较慢
链表      插入和删除比较快                    查找慢
二叉树    平衡树查找、插入和删除都快          删除算法复杂
红黑树    平衡树                              算法复杂
2-3-4树   平衡树,主要用于磁盘存储             算法复杂
哈希表    关键字已知时存取极快,插入快         删除慢;关键字未知存取很慢;存储空间利用不充分
堆        插入和删除快;最大数据项的存取很快   其他项存取慢
图        对现实世界建模                      部分算法复杂



1.数组
int[] intArr = new int[100];        //声明
int[] intArr = new int[]{1,3,7,2};  //声明并赋值
int[] intArr = {1,3,7,2};           //同上
int[][] intArr = int [4][5];        //二维数组



2.简单排序
冒泡排序
int[] sortMaopao(int[] intArr) {
    int temp;
    for (int i = 0; i < intArr.length; i++) {
        for (int j = 0; j < intArr.length - i - 1; j++) {  
            if (intArr[j] > intArr[j + 1]) {
                temp = intArr[j];
                intArr[j] = intArr[j + 1];
                intArr[j + 1] = temp;
            }
        }
    }
    return intArr;
}




3.栈和队列



4.链表



5.递归



6.高级排序



7.二叉树



8.红黑树



9.哈希表



10.堆



11.图



12.带权图






