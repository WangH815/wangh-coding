Java


参考资料
https://www.runoob.com/java/java-tutorial.html    //菜鸟教程
https://www.yiibai.com/java/                      //易百教程


简介
Java是由Sun Microsystems公司(简称Sun)在1995.05推出的面向对象的高级程序设计语言和Java平台的总称,创建者主要为James Gosling

平台体系
1)JavaSE(J2SE) (Java2 Platform Standard Edition, java平台标准版)
2)JavaEE(J2EE) (Java2 Platform Enterprise Edition, java平台企业版)
3)JavaME(J2EE) (Java2 Platform Micro Edition, java平台微型版)
2005.06,JavaOne大会上Sun发布Java SE 6,各个版本取消数字2,更名为SE,EE以及ME

Java应用程序类型
1.独立应用程序
    桌面应用程序或基于窗口的应用程序。我们需要在每台机器上安装的应用程序,
如媒体播放器,防病毒等。AWT和Swing框架在java中可用于创建独立应用程序。
2.Web应用程序
    在服务器端运行并创建动态页面的应用程序称为Web应用程序。
目前,servlet,jsp,struts,jsf等技术用于在java中创建web应用程序。
3.企业应用
    自然分布的应用程序,如银行应用程序等。它具有高级别安全性,负载平衡和集群的优势。 
在java中,EJB用于创建企业应用程序。
4.移动应用
   为移动设备创建的应用程序。目前Android和Java ME用于创建移动应用程序。

主要特性
 1)简单:语法与C和C++类似
 2)面向对象
 3)分布式:支持Internet应用开发
 4)健壮的:Java提供的强类型机制、异常处理、垃圾自动回收和安全检查机制等保证了语言的健壮性
 5)安全:安全机制、安全防范机制以及安全管理机制
 6)体系结构中立:.java由编译器编译为.class(字节码)文件,可在任意系统的JVM中解释执行
 7)可移植:编译器由Java实现,运行环境由ANSI C实现。来源于上一条。
 8)解释型
 9)高性能
10)多线程
11)动态


Java程序运行方式

		编译器				解释器
XX.java---------> XX.class---------->执行程序命令

jdk:Java Development Kit     //java开发工具集,包含jre和开发工具等
jre:Java Runtime Environment //java运行时环境,包含jvm和运行类库等
jvm:Java Virtual Machine     //java虚拟机,提供程序运行环境


JVM(Java虚拟机)

提供Java程序运行环境(工作规范),主要实现有OracleJDK和OpenJDK(开源版本)   //还有淘宝版JVM和IBM版JVM等
主要作用为:加载代码、验证代码、执行代码和提供运行时环境

JVM提供了以下定义:
内存区
类文件格式
寄存器集合
垃圾收集堆
致命错误报告等

JVM内部体系结构
1)类加载器           //Classloader是JVM的一个子系统,用于加载类文件。
2)类(方法)区域       //类(方法)区域存储每个类结构,例如运行时常量池,字段和方法数据,方法的代码。
3)堆                 //分配对象的运行时数据区。
4)堆栈
  Java堆栈存储帧。它保存局部变量和部分结果,并在方法调用和返回中起作用。
  每个线程都有一个私有JVM堆栈,同时创建线程。每次调用方法时都会创建一个新的框架。
  框架在其方法调用完成时被销毁。
5)程序计数器寄存器   //PC(程序计数器)寄存器。 它包含当前正在执行的Java虚拟机指令的地址。
6)本地方法堆栈       //它包含应用程序中使用的所有本地方法。
7)执行引擎
  执行引擎包含:
  虚拟处理器
  解释器:读取字节码流,然后执行指令。
  即时(JIT)编译器:它用于提高性能,JIT编译的同时有类似字节代码部分的功能,从而减少编译所需的时间。编译器是指从Java虚拟机(JVM)的指令集到特定CPU的指令集的转换器。

java使用Unicode系统而非ASCII码系统编码。 
char型数据默认值为 \u0000,占用2byte(字节)



基础语法

一个Java程序可认为是一系列对象的集合,调用彼此的方法来协同工作
  类:对象模板
对象:类的实例,有状态(属性)和行为(方法)
方法:实现特定功能

























