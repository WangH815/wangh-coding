算法学习


二叉树
树是用于模拟具有树状结构的数据集合
树的每一个节点包括一个根植和n和字节点，二叉树为最简单的一种，n=2

树的遍历
    F
   / \
  B   G
 / \   \
A   D   I
   / \   \
  C   E   H

前序遍历：先根后左再右(F->B->A->D->C->E->G->I->H)
中序遍历：先左后根再右(A->B->C->D->E->F->G->H->I)
后序遍历：先左后右再根(A->C->E->D->B->H->I->G->F)
层序遍历：顶层往下搜索(F->B->G->A->D->I->C->E->H)

学习要点
1.掌握树和二叉树的概念
2.熟悉不同的遍历方法
3.运用递归解决二叉树相关题目


二叉搜索树(BST/Binary Search Tree)
每个节点中的值必须大于或等于其左侧树中的任何值，
但小于或等于右侧子树中的任何值

特点：中序遍历可以得到升序排列的

学习要点
1.理解二叉搜索树的性质
2.熟悉在二叉搜索树中的基本操作
3.理解高度平衡二叉搜索树的概念

树结构中的常见用语:

节点的深度 - 从树的根节点到该节点的边数
节点的高度 - 该节点和叶子之间最长路径上的边数
树的高度 - 其根节点的高度
一个高度平衡的二叉搜索树（平衡二叉搜索树）是在插入和删除任何节点之后，可以自动保持其高度最小。
也就是说，有N个节点的平衡二叉搜索树，它的高度是logN。并且，每个节点的两个子树的高度不会相差超过1。

平衡二叉搜索树的概念经常运用在Set和Map中。 Set和Map的原理相似。

N叉树
一个节点有N个子节点(一般>=3)


前缀树
N叉树的一种特殊形式
根节点为空字符串。
前缀树的一个重要的特性是，节点所有的后代都与该节点相关的字符串有着共同的前缀。
前缀树有着广泛的应用，例如自动补全，拼写检查等等。


